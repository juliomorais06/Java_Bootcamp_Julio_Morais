Pesquisa em List
1. Catálogo de Livros
Crie uma classe chamada "CatalogoLivros" que possui uma lista de objetos do tipo "Livro" como atributo. Cada livro possui atributos como título, autor e ano de publicação. Implemente os seguintes métodos:

adicionarLivro(String titulo, String autor, int anoPublicacao): Adiciona um livro ao catálogo.
pesquisarPorAutor(String autor): Pesquisa livros por autor e retorna uma lista com os livros encontrados.
pesquisarPorIntervaloAnos(int anoInicial, int anoFinal): Pesquisa livros publicados em um determinado intervalo de anos e retorna uma lista com os livros encontrados.
pesquisarPorTitulo(String titulo): Pesquisa livros por título e retorna o primeiro livro encontrado.


import java.util..

public class CatalogoLivros {
	//atributos
	private String titulo;
	private String autor;
	private int anoPublicacao;

	//criar construtor Livro
	public Livro(String titulo, String autor, int anoPublicacao) {
	this.titulo = titulo;
	this.autor = autor;
	this.anoPublicacao = anoPublicacao;
	}
	
	public String getTitulo() {
	return titulo;
	}

	public String getAutor() {
	return autor;
	}

	public String getAnoPublicacao() {
	return anoPublicacao;
	}
	
	//metodo toString para que quando for retornar a String, não retorne o endereço de memória
	public String toString() {
		return titulo + '\''+ autor + '\'' + anoPublicacao ;
	}
}
import java.util.List;


public class CatalogoLivros {
	//atributo
	private List<Livro> livroList;

	//criando construtor de livros
	public CatalogoLivros() {
		this.livroList = new ArrayList<>();
	}

	//método de adicionar livro
	public void adicionarLivro(String titulo, String Autor, int anoPublicacao) {
	livroList.add(new Livro(titulo, autor, anoPublicacao));
	}

	//método pesquisar por autor
	public List<Livro> pesquisarPorAutor(String autor) {
		List<Livro> livrosPorAutor = new ArrayList<>();
		if(!livroList.isEmpty()) {
			for(Livro l : livroList) {
				if(l.getAutor().equalsIgnoreCase(autor)) {
					livrosPorAutor.add(l);
				}				
			}
		}
		return livrosPorAutor;
	}

	//pesquisar livros por intervalo de anos
	public List<Livro> pesquisarPorIntervaloAnos(int anoInicial, int anoFinal) {
	List<Livro> livrosPorIntervaloAnos = new ArrayList<>();
		if(!livroList.isEmpty()) {
			for(Livro l : livroList) {
				if(l.getAnoPublicacao() >= anoInicial && l.getAnoPublicacao() <= anoFinal) {
					livrosPorIntervaloAnos.add(l);
				}
			}
		}
		return livrosPorIntervaloAnos;
	}
	
	//retornar primeiro livro encontrado (se tiver mais títulos com o mesmo título, retorna-rá o primeiro)
	public Livro pesquisarPorTitulo(String titulo) {
		Livro livroPorTitulo = null;
		if(!livroList.isEmpty()) {
			for(Livro l : livroList) {
				if(l.getTitulo().equalsIgnoreCase(titulo)) {
					livroPorTitulo = l;
					break;
				}
			}
		}
		return livroPorTitulo;
	}

	public static void main(String[] args) {
		CatalogoLivros catalogoLivros = new CatalogoLivros();
		catalogoLivros.adicionarLivro("Livro 1", "Autor 1", 2020);
		catalogoLivros.adicionarLivro("Livro 1", "Autor 2", 2021);
		catalogoLivros.adicionarLivro("Livro 2", "Autor 2", 2022);
		catalogoLivros.adicionarLivro("Livro 3", "Autor 3", 2023);
		catalogoLivros.adicionarLivro("Livro 4", "Autor 4", 1994);

		System.out.println(catalogoLivros.pesquisarPorAutor("Autor 2"));
		System.out.println(catalogoLivros.pesquisarPorIntervaloAnos(2020, 2022));
		System.out.println(catalogoLivros.pesquisarPorTitulo("Livro 1"));

	} 
}
-------------------------------------------------------------------------------------------
2. Soma de Números
Crie uma classe chamada "SomaNumeros" que possui uma lista de números inteiros como atributo. Implemente os seguintes métodos:

adicionarNumero(int numero): Adiciona um número à lista de números.
calcularSoma(): Calcula a soma de todos os números na lista e retorna o resultado.
encontrarMaiorNumero(): Encontra o maior número na lista e retorna o valor.
encontrarMenorNumero(): Encontra o menor número na lista e retorna o valor.
exibirNumeros(): Retorna uma lista contendo todos os números presentes na lista.

-------------------------------------------------------------------------------------------
